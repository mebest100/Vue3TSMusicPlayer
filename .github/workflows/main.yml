name: Electron Build and Release

on:
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install windows-build-tools       
        run: |           
           echo 'Closing installer. Return code: 3010.' > $env:TEMP\dd_client_.log
           npm install --global --production windows-build-tools --vs2015 #必须是vs2015版本，否则构建不成功！
        

      - name: Install Dependencies
        run: |
          npm install --force



      - name: Build Electron
        env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run build
          npm run packapp 

      - name: Find exe files and zip
        run: |
          cd build
          dir
          dir *.exe
          Compress-Archive -Path .\*.exe -DestinationPath MyMusicApp.zip # 把build目录下的exe文件压缩成zip
          
        

      - name: Get package version  # 通过package.json文件中的version字段获取发布版本号
        id: get_version
        run: echo "version=$(cat package.json | jq -r .version)" >> "$GITHUB_OUTPUT"

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest   
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }}
        with:     
          tag_name: v${{ env.RELEASE_VERSION }} # 使用 package.json 中的版本号
          release_name: Release v${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false

      # - name: Debug Create Release Output
      #   run: |
      #      echo "Release ID: ${{ env.RELEASE_ID }}"
      #      echo "Release Upload URL: ${{ env.RELEASE_UPLOAD_URL }}"
      #   env:
      #      RELEASE_ID: ${{ steps.create_release.outputs.id }}
      #      RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}

         

      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
          RELEASE_VERSION: ${{ steps.get_version.outputs.version }} 
        with:       
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/MyMusicApp.zip # 指明上面压缩步骤生成的zip文件的路径
          asset_name: MyElectronMusicApp-${{ env.RELEASE_VERSION }}.zip
          asset_content_type: application/zip

